{"version":3,"sources":["webpack:///src/app/services/bike.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/view-registration/view-registration.component.ts","webpack:///src/app/components/view-registration/view-registration.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["httpOptions","headers","BikeService","http","get","id","bike","body","JSON","stringify","post","providedIn","environment","production","serverAddress","HomeComponent","bikeService","fb","models","bikeform","validMessage","group","name","required","email","phone","model","serialNumber","purchasePrice","purchaseDate","contact","valid","createBikeRegistration","value","subscribe","data","reset","error","submitRegistration","selector","templateUrl","styleUrls","ViewRegistrationComponent","route","getBikeReg","snapshot","params","getBike","bikeReg","err","console","log","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","AdminComponent","getBikes","bikes","routes","path","component","AppRoutingModule","forRoot","exports","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable}  from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BikeService {\n\n  constructor(private http:HttpClient) {\n\n   }\n\n   getBikes() {\n     return this.http.get('/server/api/v2/bikes');\n   }\n\n   getBike(id: number) {\n     return this.http.get('/server/api/v2/bikes/' + id);\n   }\n\n   createBikeRegistration(bike:any) {\n     let body = JSON.stringify(bike);\n     return this.http.post('/server/api/v2/bikes', body, httpOptions);\n   }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nexport const environment = {\n  production: false,\n  serverAddress: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { BikeService } from 'src/app/services/bike.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  models: string[] = [\n    'Globo MTB 29 Full Suspension',\n    'Globo Carbon Fiber Race Series',\n    'Globo Time Trial Blade'\n  ];\n\n  bikeform: FormGroup = new FormGroup({});\n\n  validMessage: string = \"\";\n\n\n  constructor(private bikeService: BikeService, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.bikeform = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['', Validators.required],\n      model: ['', Validators.required],\n      serialNumber: ['', Validators.required],\n      purchasePrice: ['', Validators.required],\n      purchaseDate: ['', Validators.required],\n      contact: ''\n    });\n  }\n\n  submitRegistration() {\n    if (this.bikeform.valid) {\n      this.validMessage = \"Your bike registration has been submitted. Thank you!\";\n      this.bikeService.createBikeRegistration(this.bikeform.value).subscribe(\n        data => {\n          this.bikeform.reset();\n          return true;\n        },\n        error => {\n          return Observable.throw(error);\n        }\n      )\n    } else {\n      this.validMessage = \"Please fill out the form before submitting!\"\n    }\n  }\n\n}\n","<div class=\"container\">\n  <form [formGroup]=\"bikeform\" (ngSubmit)=\"submitRegistration()\" novalidate>\n    <div *ngIf=\"validMessage != ''\">\n      <h3 class=\"has-info\">{{validMessage}}</h3>\n    </div>\n    <div class=\"form-group\">\n      <label>Buyer Name</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\" required autofocus/>\n    </div>\n    <div class=\"form-group\">\n      <label>Email</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" required/>\n    </div>\n    <div class=\"form-group\">\n      <label>Phone</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"phone\" required/>\n    </div>\n    <div class=\"form-group\">\n      <label>Bike Model</label>\n      <select class=\"form-control\" formControlName=\"model\" required>\n        <option value=\"\">Please select a bike</option>\n        <option *ngFor=\"let m of models\"\n                [value]=\"m\">\n                {{m}}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label>Bike Serial Number</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"serialNumber\" required/>\n    </div>\n    <div class=\"form-group\">\n      <label>Purchase Price</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"purchasePrice\" required/>\n    </div>\n    <div class=\"form-group\">\n      <label>Purchase Date</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"purchaseDate\" required/>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" >Submit</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BikeService } from 'src/app/services/bike.service';\n\n@Component({\n  selector: 'app-view-registration',\n  templateUrl: './view-registration.component.html',\n  styleUrls: ['./view-registration.component.css']\n})\nexport class ViewRegistrationComponent implements OnInit {\n\n  public bikeReg: any;\n\n  constructor(private bikeService: BikeService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.getBikeReg(this.route.snapshot.params.id);\n  }\n\n  getBikeReg(id:number) {\n    this.bikeService.getBike(id).subscribe(\n      data => {\n        this.bikeReg = data;\n      },\n      err => console.error(err),\n      () => console.log('bike loaded')\n    );\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <a class=\"btn btn=primary\" routerLink=\"/admin\">Back to List</a>\n  </div>\n  <div>\n    <div class=\"form-group\">\n      <label>Buyer Name</label>\n      <div class=\"form-control\">{{bikeReg.name}}</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Email</label>\n      <div class=\"form-control\">{{bikeReg.email}}</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Phone</label>\n      <div class=\"form-control\">{{bikeReg.phone}}</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Bike Model</label>\n      <div class=\"form-control\">{{bikeReg.model}}</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Bike Serial Number</label>\n      <div class=\"form-control\">{{bikeReg.serialNumber}}</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Purchase Price</label>\n      <div class=\"form-control\">{{bikeReg.purchasePrice}}</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Purchase Date</label>\n      <div class=\"form-control\">{{bikeReg.purchaseDate}}</div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bike-ui';\n}\n","<div style=\"text-align:center\">\n  <h1>\n    Globomatics Bike Registry System\n  </h1>\n\n</div>\n\n\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BikeService } from './services/bike.service';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ViewRegistrationComponent } from './components/view-registration/view-registration.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    HomeComponent,\n    ViewRegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [BikeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BikeService } from '../../services/bike.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  public bikes:any;\n\n  constructor(private bikeService: BikeService) { }\n\n  ngOnInit(): void {\n    this.getBikes();\n  }\n\n  getBikes() {\n    this.bikeService.getBikes().subscribe(\n      data => {this.bikes = data},\n      err => console.error(err),\n      () => console.log('bikes loaded')\n    );\n  }\n\n}\n","<div class=\"container\">\n  <table class=\"table table-bordered table-inverse\">\n    <tr>\n      <th>Owner Name</th>\n      <th>Email</th>\n      <th>Model</th>\n      <th class=\"text-right\">Purchase Price</th>\n    </tr>\n    <tr *ngFor=\"let bike of bikes\">\n      <td>\n        <a [routerLink] = \"['/admin/view/', bike.id]\">{{bike.name}}</a>\n      </td>\n      <td>\n        {{bike.email}}\n      </td>\n      <td>\n        {{bike.model}}\n      </td>\n      <td class=\"text-right\">\n        {{bike.purchasePrice}}\n      </td>\n    </tr>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ViewRegistrationComponent } from './components/view-registration/view-registration.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'admin/view/:id',\n    component: ViewRegistrationComponent\n  },\n  {\n    path: 'admin',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}